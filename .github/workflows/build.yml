name: Build

on:
  push:
    paths:
      - '.github/workflows/build.yml'
      - 'src-tauri/**/*'
      - 'src/**/*'
      - 'package.json'
  pull_request:
    paths:
      - '.github/workflows/build.yml'
      - 'src-tauri/**/*'
      - 'src/**/*'
      - 'package.json'

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 0

jobs:
  build:
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, ubuntu-20.04, macos-latest]

    steps:
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.7

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: (Linux) Install dependencies
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev \
            build-essential \
            curl \
            wget \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: (MacOS) Install MacOS universal target
        if: matrix.platform == 'macos-latest'
        run: rustup target add aarch64-apple-darwin

      - name: Install dependencies
        run: pnpm install
          
      - name: Build
        # Include seperate targets for MacOS since it needs to build for both aarch64 and x86_64
        run: pnpm tauri build ${{ matrix.platform == 'macos-latest' && '--target aarch64-apple-darwin && pnpm tauri build --target x86_64-apple-darwin' || '' }}
        env:
          RUSTFLAGS: -Awarnings

      - name: Create empty config.json
        run: cd src-tauri/target/release && echo {} > config.json
        
      - name: (Windows) Compress build
        if: matrix.platform == 'windows-latest'
        run: 7z a -tzip remitm.zip 
          src-tauri/target/release/remitm.exe
          src-tauri/target/release/config.json

      - name: (Linux) Compress build
        if: matrix.platform == 'ubuntu-20.04'
        run: cd src-tauri/target/release && tar -czvf remitm.tar.gz remitm config.json

      # Windows portable
      - name: (Windows) Upload portable
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: remitm_win64_portable
          path: remitm.zip

      # Windows MSI
      - name: (Windows) Upload .msi
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: remitm_win64_msi
          path: src-tauri/target/release/bundle/msi/*.msi

      # Ubuntu portable
      - name: (Linux) Upload portable
        if: matrix.platform == 'ubuntu-20.04'
        uses: actions/upload-artifact@v4
        with:
          name: remitm_amd64_portable
          path: src-tauri/target/release/remitm.tar.gz

      # Ubuntu deb
      - name: (Linux) Upload .deb
        if: matrix.platform == 'ubuntu-20.04'
        uses: actions/upload-artifact@v4
        with:
          name: remitm_amd64_deb
          path: src-tauri/target/release/bundle/deb/*.deb

      - name: (Linux) Upload .appimage
        if: matrix.platform == 'ubuntu-20.04'
        uses: actions/upload-artifact@v4
        with:
          name: remitm_amd64_appimage
          path: src-tauri/target/release/bundle/appimage/*.AppImage

      - name: (MacOS) Upload x86 .dmg
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: remitm_macos_x86-64_dmg
          path: src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/*.dmg
      
      - name: (MacOS) Upload ARM .dmg
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: remitm_macos_arm_dmg
          path: src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg